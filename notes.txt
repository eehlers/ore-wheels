
ore.00.zip - empty repo created with python module git-archive-all (?)
ore.01.zip - added 64 bit lib files FIXME change runtime from dynamic to static, add 32 bit
ore.02.zip - empty repo created with python module git-archive-all - updated from github master

oreswig.00.zip - empty repo created with python module git-archive-all
oreswig.01.zip - ran the swig wrapper, patched setup.py for ORE_STATIC_RUNTIME
oreswig.02.zip - patched setup.py 1) look for libs in build2 directory 2) rename package to osre
oreswig.03.zip - empty repo created with python module git-archive-all - ran swig wrapper
                 patched ored_reports.i

ore.00.tgz - raw files produced by git-archive-all
ore.01.tgz - manually commented out docs/tests from CMakeLists.txt files - DELETEME
ore.02.tgz - raw files produced by git-archive-all after commits:
             added flags to CMakeLists.txt files to make build optional
             disabled flag in cmake/commonSettings.cmake
             cmakelists dependencies on unit_test_framework - made them conditional
ore.03.tgz - raw files produced by git-archive-all

oreswig.00.tgz - raw files produced by git-archive-all
oreswig.01.tgz - ran the wrapper
oreswig.00.tgz - raw files produced by git-archive-all, ran the wrapper

=========
https://test.pypi.org/
=========

# UPLOAD - WINDOWS
C:\Users\eric.ehlers\.pypirc
#python -m pip install --upgrade pip
#python -m pip install --upgrade twine
cd C:\erik\projects\wheel\wheels\ore
python -m twine upload --repository testpypi *.whl

# INSTALL - WINDOWS
pip install -i https://test.pypi.org/simple/ OREAnalytics-Python==1.8.3.2

# UPLOAD - LINUX
/home/erik/.pypirc
#python3 -m pip install --upgrade pip
#python3 -m pip install --upgrade twine
cd /home/erik/quaternion/wheels
python3 -m twine upload --repository testpypi *.whl

# INSTALL - LINUX
cd /home/erik/quaternion/oreswig.eehlers/OREAnalytics-SWIG/Python/Examples
python3 -m venv env1
. ./env1/bin/activate
pip install /home/erik/quaternion/wheels/OREAnalytics_Python-1.8.3.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
pip install -i https://test.pypi.org/simple/ OREAnalytics-Python==1.8.3.2
python3 commodityforward.py
deactivate
rm -rf env1

=========
https://pypi.org/
=========

# UPLOAD - WINDOWS
cd C:\erik\projects\wheel\wheels2
#twine upload -r pypi --sign xxx
twine upload -r pypi xxx

# INSTALL - WINDOWS
cd %DEMO_ORE_SWIG_DIR%\OREAnalytics-SWIG\Python\Examples
python -m venv env1
.\env1\Scripts\activate.bat
pip install %DEMO_ORE_SWIG_DIR%\OREAnalytics-SWIG\Python\dist\OREAnalytics_Python-1.8.3.2-cp310-cp310-win_amd64.whl
pip install osre
python commodityforward.py
deactivate
rmdir /s /q env1

# UPLOAD - LINUX
cd /home/erik/quaternion/wheels2
twine upload -r pypi *whl

# INSTALL - LINUX

========
PROBLEMS
========

- QuantLib uses only boost header files, ORE requires boost libs
- setup:
  1) QuantLib setup.py calls quantlib-config which is generated by configure
  2) ORE setup.py calls oreanalytics-config which is handwritten
  - for #2, oreanalytics-config requires environment variables which in the CI do not get passed
    from setup.py (because cibuildwheels does not export them?) (CIBW_ENVIRONMENT_PASS_LINUX?)
- timeout:
  "The job running on runner GitHub Actions 2 has exceeded the maximum execution time of 360 minutes."
- boost libs on macos - symbolic link

=====================================
  [ 66%] Building CXX object QuantExt/qle/CMakeFiles/QuantExt.dir/instruments/commodityspreadoption.cpp.o
  [ 66%] Building CXX object QuantExt/qle/CMakeFiles/QuantExt.dir/instruments/crossccybasismtmresetswap.cpp.o
  In file included from /project/ore/QuantExt/qle/instruments/fxforward.hpp:29,
                   from /project/ore/QuantExt/qle/instruments/fxforward.cpp:21:
  /project/ore/QuantLib/ql/exchangerate.hpp: In member function 'virtual void QuantExt::FxForward::setupExpired() const':
  /project/ore/QuantLib/ql/exchangerate.hpp:38:11: error: '<anonymous>.QuantLib::ExchangeRate::type_' is used uninitialized in this function [-Werror=uninitialized]
     38 |     class ExchangeRate {
        |           ^~~~~~~~~~~~
  /project/ore/QuantLib/ql/exchangerate.hpp: In member function 'virtual void QuantExt::FxForward::results::reset()':
  /project/ore/QuantLib/ql/exchangerate.hpp:38:11: error: '<anonymous>.QuantLib::ExchangeRate::type_' is used uninitialized in this function [-Werror=uninitialized]
     38 |     class ExchangeRate {
        |           ^~~~~~~~~~~~
  cc1plus: some warnings being treated as errors
  make[2]: *** [QuantExt/qle/CMakeFiles/QuantExt.dir/build.make:1504: QuantExt/qle/CMakeFiles/QuantExt.dir/instruments/fxforward.cpp.o] Error 1
  make[1]: *** [CMakeFiles/Makefile2:2072: QuantExt/qle/CMakeFiles/QuantExt.dir/all] Error 2
  make: *** [Makefile:166: all] Error 2
  [ 66%] Building CXX object QuantExt/qle/CMakeFiles/QuantExt.dir/instruments/crossccybasisswap.cpp.o
  [ 66%] Building CXX object QuantExt/qle/CMakeFiles/QuantExt.dir/instruments/crossccyfixfloatmtmresetswap.cpp.o
  [ 66%] Building CXX object QuantExt/qle/CMakeFiles/QuantExt.dir/instruments/crossccyfixfloatswap.cpp.o
=====================================

===============

# make the source zip file - windows
cd C:\erik\ORE\repos\ore.github
#pip install git-archive-all
C:\Users\eric.ehlers\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\Scripts\git-archive-all ore.zip
cd C:\erik\ORE\repos\oreswig.github
C:\Users\eric.ehlers\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\Scripts\git-archive-all oreswig.zip

# make the source zip file - linux
cd /home/erik/quaternion/ore
#pip install git-archive-all
git-archive-all ore.tgz
cd /home/erik/quaternion/oreswig
git-archive-all oreswig.tgz

===============
# simulate the job - Windows

# build boost
cd C:\local\boost_installers
boost_1_80_0-msvc-14.3-32.exe /SILENT /SP- /SUPPRESSMSGBOXES /DIR=C:\local\boost
boost_1_80_0-msvc-14.3-64.exe /SILENT /SP- /SUPPRESSMSGBOXES /DIR=C:\local\boost

# build ore
cd C:\local\ore
mkdir build2
cd build2
SET BOOST_ROOT=C:\local\boost
#SET LIBPATH=C:\local2\boost_wazoo\lib64-msvc-14.3_wazoo
"C:\Program Files\CMake\bin\cmake.exe" -G "Visual Studio 17 2022" -A x64 ..
"C:\Program Files\CMake\bin\cmake.exe" --build . --config Release

"C:\Program Files\CMake\bin\cmake.exe" --build . --config Release --verbose
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_LIBRARY_PATH=C:\local2\boost_wazoo\lib64-msvc-14.3_wazoo --build . --config Release
"C:\Program Files\CMake\bin\cmake.exe" --build . --config Release -- LIBPATH=C:\local2\boost_wazoo\lib64-msvc-14.3_wazoo
"C:\Program Files\CMake\bin\cmake.exe" --help
"C:\Program Files\CMake\bin\cmake.exe" --help-policy CMP0074
"C:\Program Files\CMake\bin\cmake-gui.exe" ..

# build oreswig
"C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat"
cd C:\local\oreswig\OREAnalytics-SWIG\Python
set BOOST_ROOT=C:\local\boost
set BOOST_LIB=C:\local\boost\lib64-msvc-14.3
set ORE_DIR=C:\local\ore
set PATH=%PATH%;C:\erik\ORE\repos\swigwin-4.1.1
python setup.py build
python setup.py test
#pip install build
python -m build --wheel

####################################################
# run cibuildwheels locally - linux

# ATTEMPT #1
cd /home/erik/quaternion/oreswig.eehlers2/OREAnalytics-SWIG/Python
python3 -m venv env1
. ./env1/bin/activate
pip install cibuildwheel
export CIBW_BUILD='cp310-manylinux_x86_64'
export CIBW_BUILD_VERBOSITY='2'
export CIBW_ENVIRONMENT_LINUX='CXXFLAGS="-O3 -g0"'
export CIBW_ENVIRONMENT_PASS_LINUX='CXXFLAGS'
export CIBW_BEFORE_ALL_LINUX='./before_all_linux.local.sh'
export CIBW_REPAIR_WHEEL_COMMAND_LINUX='LD_LIBRARY_PATH=/host/home/erik/quaternion/boost_1_81_0/stage/lib auditwheel repair -w {dest_dir} {wheel}'
cibuildwheel --platform linux
deactivate
rm -rf env1

# ATTEMPT #2
cd /home/erik/quaternion/oreswig.eehlers2/OREAnalytics-SWIG/Python
python3 -m venv env1
. ./env1/bin/activate
pip install cibuildwheel
export CIBW_BUILD='cp310-manylinux_x86_64'
export CIBW_BUILD_VERBOSITY='2'
export CIBW_ENVIRONMENT_LINUX='CXXFLAGS="-O3 -g0"'
export CIBW_ENVIRONMENT_PASS_LINUX='CXXFLAGS'
export CIBW_BEFORE_ALL_LINUX='./before_all_linux.local.sh'
export CIBW_REPAIR_WHEEL_COMMAND_LINUX='LD_LIBRARY_PATH=/host/home/erik/quaternion/boost_1_81_0/stage/lib auditwheel repair -w {dest_dir} {wheel}'
cibuildwheel --platform linux
deactivate
rm -rf env1

# include dirs
/host/home/erik/quaternion/boost_1_81_0
/host/home/erik/quaternion/ore.eehlers/QuantLib
/host/home/erik/quaternion/ore.eehlers/QuantExt
/host/home/erik/quaternion/ore.eehlers/OREData
/host/home/erik/quaternion/ore.eehlers/OREAnalytics

# link dirs
/host/home/erik/quaternion/boost_1_81_0/stage/lib
/host/home/erik/quaternion/ore.eehlers/build/QuantLib/ql
/host/home/erik/quaternion/ore.eehlers/build/OREAnalytics/orea
/host/home/erik/quaternion/ore.eehlers/build/QuantExt/qle
/host/home/erik/quaternion/ore.eehlers/build/OREData/ored

# run cibuildwheels locally - windows

cd C:\erik\ORE\repos\oreswig.github\OREAnalytics-SWIG\Python
python -m venv env1
.\env1\Scripts\activate.bat
pip install cibuildwheel

SET DEMO_BOOST_ROOT=C:\erik\ORE\repos\boost\boost_1_81_0
SET DEMO_BOOST_LIB=C:\erik\ORE\repos\boost\boost_1_81_0\lib64-msvc-14.3
SET DEMO_SWIG_DIR=C:\erik\ORE\repos\swigwin-4.1.1
SET DEMO_ORE_DIR=C:\erik\ORE\repos\ore.github
SET DEMO_ORE_SWIG_DIR=C:\erik\ORE\repos\oreswig.github

set BOOST_ROOT=%DEMO_BOOST_ROOT%
set BOOST_LIB=%DEMO_BOOST_LIB%
set ORE_DIR=%DEMO_ORE_DIR%
set PATH=%PATH%;%DEMO_SWIG_DIR%
set ORE_STATIC_RUNTIME=1

SET CIBW_BUILD=cp310-win_amd64
SET CIBW_ARCHS_WINDOWS=AMD64
SET CIBW_BUILD_VERBOSITY=2

SET CIBW_BUILD=cp37-win32
SET CIBW_ARCHS_WINDOWS=x86
SET CIBW_BUILD_VERBOSITY=2

cibuildwheel --platform windows
deactivate
rmdir /s /q env1

####################################################
# ninja

python3 /home/erik/projects/cmake/ninjatracing/ninjatracing .ninja_log > trace.json
/home/erik/quaternion/ore.eehlers/build/trace.json
####################################################

# OLD
# copy props files
"C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat"
msbuild ORE.sln -p:Configuration="Release" -p:Platform=x64
===

IDE Version	Compiler Version
Visual Studio 2005	Visual C++ 8.0
Visual Studio 2008	Visual C++ 9.0
Visual Studio 2010	Visual C++ 10.0
Visual Studio 2012	Visual C++ 11.0
Visual Studio 2013	Visual C++ 12.0
Visual Studio 2015	Visual C++ 14.0
Visual Studio 2017	Visual C++ 14.1
Visual Studio 2019	Visual C++ 14.2
Visual Studio 2022	Visual C++ 14.3

/MD, /MDd - dynamic runtime
/MT, /MTd - static runtime

boost_xxx is the import library for xxx.dll
libboost_xxx is the static library

cmake version = 3.25.1
boost version = 1.81
my cmake complains about boost version >= 1.81.0
===

BOOST_LIBRARYDIR

CMake Warning (dev) at OREData/CMakeLists.txt:14 (find_package):
  Policy CMP0074 is not set: find_package uses <PackageName>_ROOT variables.
  Run "cmake --help-policy CMP0074" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  Environment variable Boost_ROOT is set to:

    C:\local\boost

  For compatibility, CMake is ignoring the variable.

*****************

# QL - using autotools / configure, same as github actions
./configure --prefix=/home/erik/quaternion/test_builds/install --disable-static --disable-test-suite --enable-unity-build CXXFLAGS="-O3 -g0"
date;make -j4 install;date

# QL - using the QL subset of the ORE CMake build
cmake ..
date;cmake --build .;date

# QL - unity on, tests & examples off, parallel
cmake -DCMAKE_UNITY_BUILD=ON -DQL_BUILD_EXAMPLES=OFF -DQL_BUILD_TEST_SUITE=OFF ..
date;cmake --build . -j 4;date

# ORE - same as github actions
cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DBUILD_DOC=OFF ..
date;cmake --build .;date

# ORE - xxx
# QuantExt build fails with unity on
#cmake -DCMAKE_UNITY_BUILD=ON -DQL_BUILD_EXAMPLES=OFF -DQL_BUILD_TEST_SUITE=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DBUILD_DOC=OFF ..
cmake -DQL_BUILD_EXAMPLES=OFF -DQL_BUILD_TEST_SUITE=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DBUILD_DOC=OFF ..
date;cmake --build . -j 4;date

=====

cmake/commonSettings.cmake
-> check to see if that contains the setting that crashes the musllinux build

OREAnalytics/CMakeLists.txt
find_package (Boost REQUIRED COMPONENTS unit_test_framework regex date_time thread serialization system filesystem timer OPTIONAL_COMPONENTS chrono)
cmake --build . -j 4

================
IOSTREAMS
================

SET DEMO_BOOST_ROOT=C:\erik\ORE\repos\boost2\boost
SET DEMO_BOOST_LIB=C:\erik\ORE\repos\boost2\boost\lib64-msvc-14.3

SET DEMO_ORE_DIR=C:\erik\ORE\repos\ore.gitlab

SET ZLIB_ROOT=C:\erik\ORE\repos\zlib-install
SET ZLIB_ROOT=C:\erik\ORE\repos\vcpkg\packages\zlib_x64-windows

SET DEMO_BOOST_ROOT=C:\erik\ORE\repos\boost2\boost
SET DEMO_BOOST_LIB=C:\erik\ORE\repos\boost2\boost\lib64-msvc-14.3

# gitlab
SET DEMO_BOOST_ROOT=C:\erik\ORE\repos\boost2\boost
SET DEMO_BOOST_LIB=C:\erik\ORE\repos\boost2\boost\lib64-msvc-14.3
SET DEMO_SWIG_DIR=C:\erik\ORE\repos\swigwin-4.1.1
SET DEMO_ORE_DIR=C:\erik\ORE\repos\oreplus\ore
SET DEMO_ORE_SWIG_DIR=C:\erik\ORE\repos\oreswig.gitlab
#SET ZLIB_ROOT=C:\erik\ORE\repos\vcpkg\packages\zlib_x64-windows

# github
SET DEMO_BOOST_ROOT=C:\erik\ORE\repos\boost\boost_1_81_0
SET DEMO_BOOST_LIB=C:\erik\ORE\repos\boost\boost_1_81_0\lib64-msvc-14.3
SET DEMO_SWIG_DIR=C:\erik\ORE\repos\swigwin-4.1.1
SET DEMO_ORE_DIR=C:\erik\ORE\repos\ore.github
SET DEMO_ORE_SWIG_DIR=C:\erik\ORE\repos\oreswig.github
#SET ZLIB_ROOT=C:\erik\ORE\repos\vcpkg\packages\zlib_x64-windows

# test1
SET DEMO_BOOST_ROOT=C:\erik\ORE\repos\boost\boost_1_81_0
SET DEMO_BOOST_LIB=C:\erik\ORE\repos\boost\boost_1_81_0\lib64-msvc-14.3
SET DEMO_SWIG_DIR=C:\erik\ORE\repos\swigwin-4.1.1
SET DEMO_ORE_DIR=C:\erik\ORE\repos\ore.github
SET DEMO_ORE_SWIG_DIR=C:\erik\projects\wheel\zips\oreswig

cd C:\erik\ORE\repos\zlib-1.2.13
mkdir build
cd build
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_INSTALL_PREFIX=C:\erik\ORE\repos\zlib-install -G "Visual Studio 17 2022" -A x64 ..
"C:\Program Files\CMake\bin\cmake.exe" --build . --config Release
"C:\Program Files\CMake\bin\cmake.exe" --install .

C:\erik\ORE\repos\zlib-install\lib
/LIBPATH:C:\erik\ORE\repos\zlib-install\lib

# PROJECT #1

# boost
cd C:\erik\projects\empty\iostream\boost0\boost_1_81_0
C:\erik\ORE\repos\boost\install\b2.exe --with-iostreams --build-dir=C:\erik\ORE\repos\boost\build --stagedir=.\lib\x64 toolset=msvc-14.3 address-model=64 runtime-link=static stage

set BOOST_INCLUDEDIR=C:\erik\ORE\repos\boost2\boost
set BOOST_LIBRARYDIR=C:\erik\ORE\repos\boost2\boost\lib64-msvc-14.3
"C:\Program Files\CMake\bin\cmake.exe" -DBoost_NO_WARN_NEW_VERSIONS=1 -G "Visual Studio 17 2022" -A x64 ..
"C:\Program Files\CMake\bin\cmake.exe" -DBoost_NO_WARN_NEW_VERSIONS=1 -G "Visual Studio 17 2022" -A x64 .. --fresh
"C:\Program Files\CMake\bin\cmake.exe" --build . --config Release
"C:\Program Files\CMake\bin\cmake.exe" --build . --config Release --verbose


/c/erik/ORE/repos/oreswig.gitlab/OREAnalytics-SWIG/Python
# with zlib / dynamic linking
cmd.zlib.01.link.00.cmd - default command from setup.py
cmd.zlib.01.link.01.cmd - modified/hacked, works, requires MSVC command prompt / rc.exe - why?

======================
troubleshooting github actions build errors
======================
# error: no member named 'deseasonalisedZeroRate' in 'QuantLib::Seasonality'
OREAnalytics/orea/scenario/scenariosimmarket.cpp:1934
QuantLib/ql/termstructures/inflation/seasonality.hpp

======================
override
======================
QuantExt/qle/termstructures/inflation/cpivolatilitystructure.hpp
QuantExt/qle/termstructures/inflation/piecewisezeroinflationcurve.hpp
cmake/commonSettings.cmake
======================
missing ql commit
======================
cp exchangerate.hpp ore/QuantLib/ql
