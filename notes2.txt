
=========
# UPLOAD - WINDOWs
C:\Users\eric.ehlers\.pypirc
#python -m pip install --upgrade pip
#python -m pip install --upgrade twine
cd C:\erik\projects\wheel\wheels\20230102
python -m twine upload --repository testpypi *.whl

# UPLOAD - LINUX
/home/erik/.pypirc
#python3 -m pip install --upgrade pip
#python3 -m pip install --upgrade twine
cd /home/erik/quaternion/wheels
python3 -m twine upload --repository testpypi *.whl

# INSTALL - WINDOWS
pip install -i https://test.pypi.org/simple/ OREAnalytics-Python==1.8.3.2

# INSTALL - LINUX
cd /home/erik/quaternion/oreswig.eehlers/OREAnalytics-SWIG/Python/Examples
python3 -m venv env1
. ./env1/bin/activate
pip install /home/erik/quaternion/wheels/OREAnalytics_Python-1.8.3.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
pip install -i https://test.pypi.org/simple/ OREAnalytics-Python==1.8.3.2
python3 commodityforward.py
deactivate
rm -rf env1

========
PROBLEMS
========

- QuantLib uses only boost header files, ORE requires boost libs
- setup:
  1) QuantLib setup.py calls quantlib-config which is generated by configure
  2) ORE setup.py calls oreanalytics-config which is handwritten
  - for #2, oreanalytics-config requires environment variables which in the CI do not get passed
    from setup.py (because cibuildwheels does not export them?) (CIBW_ENVIRONMENT_PASS_LINUX?)
- timeout:
  "The job running on runner GitHub Actions 2 has exceeded the maximum execution time of 360 minutes."
- boost libs on macos - symbolic link

=====================================
  [ 66%] Building CXX object QuantExt/qle/CMakeFiles/QuantExt.dir/instruments/commodityspreadoption.cpp.o
  [ 66%] Building CXX object QuantExt/qle/CMakeFiles/QuantExt.dir/instruments/crossccybasismtmresetswap.cpp.o
  In file included from /project/ore/QuantExt/qle/instruments/fxforward.hpp:29,
                   from /project/ore/QuantExt/qle/instruments/fxforward.cpp:21:
  /project/ore/QuantLib/ql/exchangerate.hpp: In member function 'virtual void QuantExt::FxForward::setupExpired() const':
  /project/ore/QuantLib/ql/exchangerate.hpp:38:11: error: '<anonymous>.QuantLib::ExchangeRate::type_' is used uninitialized in this function [-Werror=uninitialized]
     38 |     class ExchangeRate {
        |           ^~~~~~~~~~~~
  /project/ore/QuantLib/ql/exchangerate.hpp: In member function 'virtual void QuantExt::FxForward::results::reset()':
  /project/ore/QuantLib/ql/exchangerate.hpp:38:11: error: '<anonymous>.QuantLib::ExchangeRate::type_' is used uninitialized in this function [-Werror=uninitialized]
     38 |     class ExchangeRate {
        |           ^~~~~~~~~~~~
  cc1plus: some warnings being treated as errors
  make[2]: *** [QuantExt/qle/CMakeFiles/QuantExt.dir/build.make:1504: QuantExt/qle/CMakeFiles/QuantExt.dir/instruments/fxforward.cpp.o] Error 1
  make[1]: *** [CMakeFiles/Makefile2:2072: QuantExt/qle/CMakeFiles/QuantExt.dir/all] Error 2
  make: *** [Makefile:166: all] Error 2
  [ 66%] Building CXX object QuantExt/qle/CMakeFiles/QuantExt.dir/instruments/crossccybasisswap.cpp.o
  [ 66%] Building CXX object QuantExt/qle/CMakeFiles/QuantExt.dir/instruments/crossccyfixfloatmtmresetswap.cpp.o
  [ 66%] Building CXX object QuantExt/qle/CMakeFiles/QuantExt.dir/instruments/crossccyfixfloatswap.cpp.o
=====================================

===============
# make the source zip file

# git bash
git clone https://github.com/eehlers/Engine.git ore.eehlers.src
cd ore.eehlers.src
vi CMakeLists.txt -> include(CPack)
git submodule init
git submodule update

# DOS
cd C:\erik\ORE\repos\ore.eehlers.src
mkdir build
cd build
"C:\Program Files\CMake\bin\cmake.exe" -G "Visual Studio 17 2022" -A x64 ..
"C:\Program Files\CMake\bin\cpack.exe" --config CPackSourceConfig.cmake
-> C:/erik/ORE/repos/ore.eehlers.src/build/ORE-0.1.1-Source.zip

# make the source zip file #2 - windows
cd C:\erik\ORE\repos\ore.eehlers
python -m venv env1
.\env1\Scripts\activate.bat
pip install git-archive-all
git-archive-all ore.zip
cd ..\oreswig.eehlers
git-archive-all oreswig.zip

# make the source zip file #2 - linux
cd /home/erik/quaternion/ore.eehlers
python3 -m venv env1
. env1/bin/activate
pip install git-archive-all
git-archive-all ore.tgz
cd ../oreswig.eehlers
git-archive-all oreswig.tgz

===============
# simulate the job - Windows

# build boost
cd C:\local\boost_installers
boost_1_80_0-msvc-14.3-32.exe /SILENT /SP- /SUPPRESSMSGBOXES /DIR=C:\local\boost
boost_1_80_0-msvc-14.3-64.exe /SILENT /SP- /SUPPRESSMSGBOXES /DIR=C:\local\boost

# build ore
cd C:\local\ore
mkdir build2
cd build2
SET BOOST_ROOT=C:\local\boost
#SET LIBPATH=C:\local2\boost_wazoo\lib64-msvc-14.3_wazoo
"C:\Program Files\CMake\bin\cmake.exe" -G "Visual Studio 17 2022" -A x64 ..
"C:\Program Files\CMake\bin\cmake.exe" --build . --config Release

"C:\Program Files\CMake\bin\cmake.exe" --build . --config Release --verbose
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_LIBRARY_PATH=C:\local2\boost_wazoo\lib64-msvc-14.3_wazoo --build . --config Release
"C:\Program Files\CMake\bin\cmake.exe" --build . --config Release -- LIBPATH=C:\local2\boost_wazoo\lib64-msvc-14.3_wazoo
"C:\Program Files\CMake\bin\cmake.exe" --help
"C:\Program Files\CMake\bin\cmake.exe" --help-policy CMP0074
"C:\Program Files\CMake\bin\cmake-gui.exe" ..

# build oreswig
"C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat"
cd C:\local\oreswig\OREAnalytics-SWIG\Python
set BOOST_ROOT=C:\local\boost
set BOOST_LIB=C:\local\boost\lib64-msvc-14.3
set ORE_DIR=C:\local\ore
set PATH=%PATH%;C:\erik\ORE\repos\swigwin-4.1.1
python setup.py build
python setup.py test
#pip install build
python -m build --wheel

# OLD
# copy props files
"C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat"
msbuild ORE.sln -p:Configuration="Release" -p:Platform=x64
===

IDE Version	Compiler Version
Visual Studio 2005	Visual C++ 8.0
Visual Studio 2008	Visual C++ 9.0
Visual Studio 2010	Visual C++ 10.0
Visual Studio 2012	Visual C++ 11.0
Visual Studio 2013	Visual C++ 12.0
Visual Studio 2015	Visual C++ 14.0
Visual Studio 2017	Visual C++ 14.1
Visual Studio 2019	Visual C++ 14.2
Visual Studio 2022	Visual C++ 14.3

/MD, /MDd - dynamic runtime
/MT, /MTd - static runtime

boost_xxx is the import library for xxx.dll
libboost_xxx is the static library

cmake version = 3.25.1
boost version = 1.81
my cmake complains about boost version >= 1.81.0
===

BOOST_LIBRARYDIR

CMake Warning (dev) at OREData/CMakeLists.txt:14 (find_package):
  Policy CMP0074 is not set: find_package uses <PackageName>_ROOT variables.
  Run "cmake --help-policy CMP0074" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  Environment variable Boost_ROOT is set to:

    C:\local\boost

  For compatibility, CMake is ignoring the variable.

################################################
# ALTERNATE WAY TO BUILD SWIG WRAPPERS - WINDOWS
################################################

# QuantExt-SWIG
5.1 Use cmake to generate the project files

cd %DEMO_ORE_SWIG_DIR%\buildQuantExt-SWIG
"C:\Program Files\CMake\bin\cmake.exe" -G "Visual Studio 17 2022" ^
-A x64 ^
-D SWIG_DIR=%DEMO_SWIG_DIR%\Lib ^
-D SWIG_EXECUTABLE=%DEMO_SWIG_DIR%\swig.exe ^
-D ORE:PATHNAME=%DEMO_ORE_DIR% ^
-D BOOST_ROOT=%DEMO_BOOST_DIR% ^
-S %DEMO_ORE_SWIG_DIR%\QuantExt-SWIG\Python
-> %DEMO_ORE_SWIG_DIR%\buildQuantExt-SWIG\QuantExt-Python.sln

5.1.1 EITHER Build the pyd file using Visual Studio

%DEMO_ORE_SWIG_DIR%\buildQuantExt-SWIG\QuantExt-Python.sln
-> %DEMO_ORE_SWIG_DIR%\buildQuantExt-SWIG\Release\_QuantExt.pyd

5.1.2 OR Build the pyd file using cmake

cd %DEMO_ORE_SWIG_DIR%\buildQuantExt-SWIG
"C:\Program Files\CMake\bin\cmake.exe" --build . --config Release
-> %DEMO_ORE_SWIG_DIR%\buildQuantExt-SWIG\Release\_QuantExt.pyd

# ORE-SWIG
3.1 Use cmake to generate the project files

cd %DEMO_ORE_SWIG_DIR%
mkdir buildOREAnalytics-SWIG
cd %DEMO_ORE_SWIG_DIR%\buildOREAnalytics-SWIG
"C:\Program Files\CMake\bin\cmake.exe" -G "Visual Studio 17 2022" ^
-A x64 ^
-D SWIG_DIR=%DEMO_SWIG_DIR%\Lib ^
-D SWIG_EXECUTABLE=%DEMO_SWIG_DIR%\swig.exe ^
-D ORE:PATHNAME=%DEMO_ORE_DIR% ^
-D BOOST_ROOT=%DEMO_BOOST_DIR% ^
-S %DEMO_ORE_SWIG_DIR%\OREAnalytics-SWIG\Python
-> %DEMO_ORE_SWIG_DIR%\buildOREAnalytics-SWIG\OREAnalytics-Python.sln

3.1.1 EITHER Build the pyd file using Visual Studio

%DEMO_ORE_SWIG_DIR%\buildOREAnalytics-SWIG\OREAnalytics-Python.sln
-> %DEMO_ORE_SWIG_DIR%\buildOREAnalytics-SWIG\Release\_OREAnalytics.pyd

3.1.2 OR Build the pyd file using cmake

cd %DEMO_ORE_SWIG_DIR%\buildOREAnalytics-SWIG
"C:\Program Files\CMake\bin\cmake.exe" --build . --config Release
-> %DEMO_ORE_SWIG_DIR%\buildOREAnalytics-SWIG\Release\_OREAnalytics.pyd

##############################################
# ALTERNATE WAY TO BUILD SWIG WRAPPERS - LINUX
##############################################

# QuantExt-SWIG

4.1 Use cmake to generate the project files

cd $DEMO_ORE_SWIG_DIR
mkdir buildQuantExt-SWIG
cd $DEMO_ORE_SWIG_DIR/buildQuantExt-SWIG
cmake -DORE:PATHNAME=$DEMO_ORE_DIR -DBOOST_ROOT=$DEMO_BOOST_DIR -S$DEMO_ORE_SWIG_DIR/QuantExt-SWIG/Python
-> $DEMO_ORE_SWIG_DIR/buildQuantExt-SWIG/Makefile

4.1.1 EITHER Build the pyd file using make

cd $DEMO_ORE_SWIG_DIR/buildQuantExt-SWIG
make
-> $DEMO_ORE_SWIG_DIR/buildQuantExt-SWIG/_QuantExt.so

4.1.2 OR Build the pyd file using cmake

cd $DEMO_ORE_SWIG_DIR/buildQuantExt-SWIG
cmake --build .
-> $DEMO_ORE_SWIG_DIR/buildQuantExt-SWIG/_QuantExt.so

# ORE-SWIG

7.1 Use cmake to generate the project files

cd $DEMO_ORE_SWIG_DIR
mkdir buildOREAnalytics-SWIG
cd $DEMO_ORE_SWIG_DIR/buildOREAnalytics-SWIG
cmake -DBOOST_ROOT=$DEMO_BOOST_DIR -DORE=$DEMO_ORE_DIR -S$DEMO_ORE_SWIG_DIR/OREAnalytics-SWIG/Python -Wno-dev
-> $DEMO_ORE_SWIG_DIR/buildOREAnalytics-SWIG/Makefile

7.1.1 EITHER Build the pyd file using make

cd $DEMO_ORE_SWIG_DIR/buildOREAnalytics-SWIG
make # swap space
-> $DEMO_ORE_SWIG_DIR/buildOREAnalytics-SWIG/_OREAnalytics.so

7.1.2 OR Build the pyd file using cmake

cd $DEMO_ORE_SWIG_DIR/buildOREAnalytics-SWIG
cmake --build .
-> $DEMO_ORE_SWIG_DIR/buildOREAnalytics-SWIG/_OREAnalytics.so
