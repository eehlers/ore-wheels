name: Build 31 - MacOS arm64
on: workflow_dispatch
jobs:
  wheels-macos:
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v3
#    - name: Install Zlib
#      run: |
#        brew install zlib
    - name: Build Boost
      run: |
        curl -O -L https://boostorg.jfrog.io/artifactory/main/release/1.80.0/source/boost_1_80_0.tar.gz
        tar xfz boost_1_80_0.tar.gz
        cd boost_1_80_0
        ./bootstrap.sh
        ./b2 architecture=arm address-model=64 -s NO_LZMA=1 -s NO_ZSTD=1 abi=aapcs install
    - name: Build ORE
      run: |
        pwd
        tar xfz ore.tgz
        #cp exchangerate.hpp ore/QuantLib/ql
        tar xfz oreswig.tgz
        #cp setup.py oreswig/OREAnalytics-SWIG/Python/setup.py
        cp oreanalytics-config.30 oreswig/OREAnalytics-SWIG/oreanalytics-config
        cd ore
        mkdir build
        cd build
        cmake -DCMAKE_OSX_ARCHITECTURES=arm64 -DORE_USE_ZLIB=ON -DORE_BUILD_DOC=OFF -DORE_BUILD_EXAMPLES=OFF -DORE_BUILD_TESTS=OFF -DORE_BUILD_APP=OFF -DQL_BUILD_BENCHMARK=OFF -DQL_BUILD_EXAMPLES=OFF -DQL_BUILD_TEST_SUITE=OFF -DQL_ENABLE_SESSIONS=ON -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . -j4
        cmake --install .
    - name: Build ORE wheels
      uses: pypa/cibuildwheel@v2.11.1
      env:
        #CIBW_BUILD: cp310-macosx_arm64
        CIBW_SKIP: cp36-*
        CIBW_ARCHS_MACOS: arm64
        CXXFLAGS: -std=c++14 -g0 -O3
        CIBW_BUILD_VERBOSITY: 2
        CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
          DYLD_LIBRARY_PATH=/usr/local/lib delocate-listdeps {wheel} &&
          DYLD_LIBRARY_PATH=/usr/local/lib delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}
      with:
        package-dir: oreswig/OREAnalytics-SWIG/Python
    - name: Save wheels as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: wheels-macos-arm64
        path: ./wheelhouse/*.whl
