name: Build 31 - MacOS arm64
on: workflow_dispatch
jobs:
  wheels-macos:
    runs-on: macos-11
    #strategy:
    #  fail-fast: false
    #  matrix:
    #    arch: [x86_64, arm64]
    steps:
    - uses: actions/checkout@v3
    - name: Install boost
      uses: MarkusJx/install-boost@v2.4.1
      id: install-boost
      with:
        boost_version: 1.80.0
        arch: arm64
    - name: Setup
      run: |
#        brew install boost
#        cd /usr/local/lib
#        ln -s libboost_thread-mt.dylib libboost_thread.dylib
#        ln -s libboost_thread-mt.a libboost_thread.a
        echo "ls -l /usr/local"
        ls -l /usr/local
        echo "ls -l /usr/local/lib"
        ls -l /usr/local/lib
#    - name: Build ORE
#      run: |
#        pwd
#        tar xfz ore.00.tgz
#        tar xfz oreswig.01.tgz
#        cp setup.30.py oreswig/OREAnalytics-SWIG/Python/setup.py
#        cp oreanalytics-config.30 oreswig/OREAnalytics-SWIG/oreanalytics-config
#        cd ore
#        mkdir build
#        cd build
#        cmake -DBUILD_DOC=OFF ..
#        cmake --build .
#        cmake --install .
#        echo "ls -l /usr/local/lib"
#        ls -l /usr/local/lib
#        echo "find /usr/local -name version.hpp"
#        find /usr/local -name version.hpp
#    - name: Build ORE wheels
#      uses: pypa/cibuildwheel@v2.11.1
#      env:
#        CIBW_BUILD: cp310-macosx_arm64
#        CIBW_ARCHS_MACOS: arm64
#        CXXFLAGS: -std=c++14 -g0 -O3
#        CIBW_BUILD_VERBOSITY: 2
#        CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
#          DYLD_LIBRARY_PATH=/usr/local/lib delocate-listdeps {wheel} &&
#          DYLD_LIBRARY_PATH=/usr/local/lib delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}
#      with:
#        package-dir: oreswig/OREAnalytics-SWIG/Python
#    - name: Save wheels as artifacts
#      uses: actions/upload-artifact@v3
#      with:
#        name: wheels-macos-${{ matrix.arch }}
#        name: wheels-macos-arm64
#        path: ./wheelhouse/*.whl
